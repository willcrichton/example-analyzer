(function() {var implementors = {};
implementors["gio"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"glib/object/trait.IsA.html\" title=\"trait glib::object::IsA\">IsA</a>&lt;<a class=\"struct\" href=\"gio/struct.IOStream.html\" title=\"struct gio::IOStream\">IOStream</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>&gt; <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> for <a class=\"struct\" href=\"gio/struct.IOStreamAsyncReadWrite.html\" title=\"struct gio::IOStreamAsyncReadWrite\">IOStreamAsyncReadWrite</a>&lt;T&gt;","synthetic":false,"types":["gio::io_stream::IOStreamAsyncReadWrite"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"glib/object/trait.IsA.html\" title=\"trait glib::object::IsA\">IsA</a>&lt;<a class=\"struct\" href=\"gio/struct.InputStream.html\" title=\"struct gio::InputStream\">InputStream</a>&gt;&gt; <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> for <a class=\"struct\" href=\"gio/struct.InputStreamAsyncBufRead.html\" title=\"struct gio::InputStreamAsyncBufRead\">InputStreamAsyncBufRead</a>&lt;T&gt;","synthetic":false,"types":["gio::input_stream::InputStreamAsyncBufRead"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"glib/object/trait.IsA.html\" title=\"trait glib::object::IsA\">IsA</a>&lt;<a class=\"struct\" href=\"gio/struct.PollableInputStream.html\" title=\"struct gio::PollableInputStream\">PollableInputStream</a>&gt;&gt; <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> for <a class=\"struct\" href=\"gio/struct.InputStreamAsyncRead.html\" title=\"struct gio::InputStreamAsyncRead\">InputStreamAsyncRead</a>&lt;T&gt;","synthetic":false,"types":["gio::pollable_input_stream::InputStreamAsyncRead"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()