var searchIndex = JSON.parse('{\
"warp":{"doc":"warp","t":[3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,0,0,0,11,11,5,11,11,5,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,0,0,0,11,11,11,11,0,0,0,11,11,0,0,0,11,0,0,0,0,0,0,0,11,0,11,11,11,11,0,5,5,3,5,11,11,5,5,11,11,5,11,11,5,11,5,11,11,11,11,11,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,5,11,5,11,11,11,11,11,3,11,11,5,5,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,5,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,3,3,3,3,3,3,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,10,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["Error","Filter","Server","and","and","and_then","and_then","bind","bind_ephemeral","bind_with_graceful_shutdown","borrow","borrow","borrow_mut","borrow_mut","boxed","boxed","filters","fmt","fmt","fmt","from","from","from","into","into","map","map","or","or","or_else","or_else","path","recover","recover","redirect","reject","reply","run","run_incoming","serve","serve_incoming","serve_incoming_with_graceful_shutdown","service","source","test","to_string","try_bind","try_bind_ephemeral","try_bind_with_graceful_shutdown","try_from","try_from","try_into","try_into","type_id","type_id","unify","unify","untuple_one","untuple_one","vzip","vzip","with","with","wrap_fn","BoxedFilter","addr","any","body","borrow","borrow_mut","clone","clone_into","cookie","cors","ext","fmt","from","fs","header","host","into","log","method","multipart","path","query","reply","sse","to_owned","trace","try_from","try_into","type_id","vzip","ws","remote","any","BodyDeserializeError","aggregate","borrow","borrow_mut","bytes","content_length_limit","fmt","fmt","form","from","into","json","source","stream","to_string","try_from","try_into","type_id","vzip","cookie","optional","Builder","Cors","CorsForbidden","allow_any_origin","allow_credentials","allow_header","allow_headers","allow_method","allow_methods","allow_origin","allow_origins","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","cors","expose_header","expose_headers","fmt","fmt","fmt","fmt","from","from","from","into","into","into","max_age","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MissingExtension","borrow","borrow_mut","fmt","fmt","from","get","into","optional","to_string","try_from","try_into","type_id","vzip","File","borrow","borrow_mut","dir","file","fmt","from","into","into_response","path","try_from","try_into","type_id","vzip","exact","exact_ignore_case","header","headers_cloned","optional","value","Authority","as_ref","as_str","borrow","borrow_mut","clone","clone_into","eq","eq","eq","eq","equivalent","exact","fmt","fmt","from","from_maybe_shared","from_static","from_str","hash","host","into","optional","partial_cmp","partial_cmp","partial_cmp","partial_cmp","port","port_u16","to_owned","to_string","try_from","try_from","try_from","try_into","type_id","vzip","Info","Log","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","custom","elapsed","fmt","from","from","host","into","into","log","method","path","referer","remote_addr","request_headers","status","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_agent","version","vzip","vzip","delete","get","head","method","options","patch","post","put","FormData","FormOptions","Part","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","content_type","data","filename","fmt","fmt","fmt","form","from","from","from","into","into","into","max_length","name","poll_next","stream","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","Exact","FullPath","Peek","Tail","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","end","fmt","fmt","fmt","from","from","from","from","full","into","into","into","into","param","path","peek","segments","tail","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","query","raw","WithDefaultHeader","WithHeader","WithHeaders","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default_header","fmt","fmt","fmt","from","from","from","header","headers","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Event","KeepAlive","borrow","borrow","borrow_mut","borrow_mut","comment","data","default","event","fmt","fmt","fmt","from","from","id","interval","into","into","json_data","keep_alive","last_event_id","reply","retry","stream","text","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Info","Trace","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","host","into","into","method","named","path","referer","remote_addr","request","request_headers","to_owned","trace","try_from","try_from","try_into","try_into","type_id","type_id","user_agent","version","vzip","vzip","Message","MissingConnectionUpgrade","WebSocket","Ws","as_bytes","binary","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","close","close_frame","close_with","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into","into_bytes","is_binary","is_close","is_ping","is_pong","is_text","max_frame_size","max_message_size","max_send_queue","ne","on_upgrade","ping","poll_close","poll_flush","poll_next","poll_ready","pong","start_send","text","to_owned","to_str","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ws","permanent","redirect","see_other","temporary","InvalidHeader","InvalidQuery","LengthRequired","MethodNotAllowed","MissingCookie","MissingHeader","PayloadTooLarge","Reject","Rejection","UnsupportedMediaType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","custom","find","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","is_not_found","name","name","name","not_found","reject","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Html","Json","Reply","Response","WithHeader","WithStatus","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","html","into","into","into","into","into_response","into_response","into_response","into_response","into_response","json","reply","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_header","with_status","RequestBuilder","WsBuilder","WsClient","WsError","body","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","description","extension","filter","fmt","fmt","fmt","fmt","fmt","from","from","from","from","handshake","header","header","into","into","into","into","json","matches","method","path","path","recv","recv_closed","remote_addr","reply","request","send","send_text","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ws"],"q":["warp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters::addr","warp::filters::any","warp::filters::body","","","","","","","","","","","","","","","","","","","warp::filters::cookie","","warp::filters::cors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters::ext","","","","","","","","","","","","","","warp::filters::fs","","","","","","","","","","","","","","warp::filters::header","","","","","","warp::filters::host","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters::method","","","","","","","","warp::filters::multipart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters::path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters::query","","warp::filters::reply","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters::sse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters::trace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::filters::ws","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::redirect","","","","warp::reject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::reply","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","warp::test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Errors that can happen inside warp.","Composable request filters.","A Warp Server ready to filter requests.","Composes a new <code>Filter</code> that requires both this and the …","Composes a new <code>Filter</code> that requires both this and the …","Composes this <code>Filter</code> with a function receiving the …","Composes this <code>Filter</code> with a function receiving the …","Bind to a socket address, returning a <code>Future</code> that can be …","Bind to a possibly ephemeral socket address.","Create a server with graceful shutdown signal.","","","","","Boxes this filter into a trait object, making it easier …","Boxes this filter into a trait object, making it easier …","Built-in Filters","","","","","","","","","Composes this <code>Filter</code> with a function receiving the …","Composes this <code>Filter</code> with a function receiving the …","Composes a new <code>Filter</code> of either this or the other filter.","Composes a new <code>Filter</code> of either this or the other filter.","Compose this <code>Filter</code> with a function receiving an error.","Compose this <code>Filter</code> with a function receiving an error.","Convenient way to chain multiple path filters together.","Compose this <code>Filter</code> with a function receiving an error and…","Compose this <code>Filter</code> with a function receiving an error and…","Redirect requests to a new location.","Rejections","Reply to requests.","Run this <code>Server</code> forever on the current thread.","Run this <code>Server</code> forever on the current thread with a …","Create a <code>Server</code> with the provided <code>Filter</code>.","Setup this <code>Server</code> with a specific stream of incoming …","Setup this <code>Server</code> with a specific stream of incoming …","Convert a <code>Filter</code> into a <code>Service</code>.","","Test utilities to test your filters.","","Bind to a socket address, returning a <code>Future</code> that can be …","Tried to bind a possibly ephemeral socket address.","Create a server with graceful shutdown signal.","","","","","","","Unifies the extracted value of <code>Filter</code>s composed with <code>or</code>.","Unifies the extracted value of <code>Filter</code>s composed with <code>or</code>.","Convenience method to remove one layer of tupling.","Convenience method to remove one layer of tupling.","","","Wraps the current filter with some wrapper.","Wraps the current filter with some wrapper.","Function that receives a filter to be combined with pre …","A type representing a boxed <code>Filter</code> trait object.","Socket Address filters.","A filter that matches any route.","Body filters","","","","","Cookie Filters","CORS Filters","Request Extensions","","","File System Filters","Header Filters","Host (“authority”) filter","","Logger Filters","HTTP Method filters.","Multipart body filters","Path Filters","Query Filters","Reply Filters","Server-Sent Events (SSE)","","<code>tracing</code> filters.","","","","","Websockets Filters","Creates a <code>Filter</code> to get the remote address of the …","A filter that matches any route.","An error used in rejections when deserializing a request …","Returns a <code>Filter</code> that matches any request and extracts a …","","","Returns a <code>Filter</code> that matches any request and extracts a …","Require a <code>content-length</code> header to have a value no …","","","Returns a <code>Filter</code> that matches any request and extracts a …","","","Returns a <code>Filter</code> that matches any request and extracts a …","","Create a <code>Filter</code> that extracts the request body as a …","","","","","","Creates a <code>Filter</code> that requires a cookie by name.","Creates a <code>Filter</code> that looks for an optional cookie by …","A constructed via <code>warp::cors()</code>.","A wrapping filter constructed via <code>warp::cors()</code>.","An error used to reject requests that are forbidden by a …","Sets that <em>any</em> <code>Origin</code> header is allowed.","Sets whether to add the <code>Access-Control-Allow-Credentials</code> …","Adds a header to the list of allowed request headers.","Adds multiple headers to the list of allowed request …","Adds a method to the existing list of allowed request …","Adds multiple methods to the existing list of allowed …","Add an origin to the existing list of allowed <code>Origin</code>s.","Add multiple origins to the existing list of allowed …","","","","","","","Builds the <code>Cors</code> wrapper from the configured settings.","","","","","Create a wrapping filter that exposes CORS behavior for a …","Adds a header to the list of exposed headers.","Adds multiple headers to the list of exposed headers.","","","","","","","","","","","Sets the <code>Access-Control-Max-Age</code> header.","","","","","","","","","","","","","","","","An error used to reject if <code>get</code> cannot find the extension.","","","","","","Get a previously set extension of the current route.","","Get a previously set extension of the current route.","","","","","","A file response.","","","Creates a <code>Filter</code> that serves a directory at the base <code>path</code> …","Creates a <code>Filter</code> that serves a File at the <code>path</code>.","","","","","Extract the <code>&Path</code> of the file this <code>Response</code> delivers.","","","","","Create a <code>Filter</code> that requires a header to match the value …","Create a <code>Filter</code> that requires a header to match the value …","Create a <code>Filter</code> that tries to parse the specified header.","Create a <code>Filter</code> that returns a clone of the request’s …","Create a <code>Filter</code> that tries to parse the specified header, …","Create a <code>Filter</code> that gets a <code>HeaderValue</code> for the name.","Represents the authority component of a URI.","","Return a str representation of the authority","","","","","","","","","","Creates a <code>Filter</code> that requires a specific authority …","","","","Attempt to convert a <code>Bytes</code> buffer to a <code>Authority</code>.","Attempt to convert an <code>Authority</code> from a static string.","","","Get the host of this <code>Authority</code>.","","Creates a <code>Filter</code> that looks for an authority (target …","","","","","Get the port part of this <code>Authority</code>.","Get the port of this <code>Authority</code> as a <code>u16</code>.","","","","","","","","","Information about the request/response that can be used …","Decorates a <code>Filter</code> to log requests and responses.","","","","","","","Create a wrapping filter that receives <code>warp::log::Info</code>.","View the <code>Duration</code> that elapsed for the request.","","","","View the host of the request","","","Create a wrapping filter with the specified <code>name</code> as the …","View the <code>http::Method</code> of the request.","View the URI path of the request.","View the referer of the request.","View the remote <code>SocketAddr</code> of the request.","Access the full headers of the request","View the <code>http::StatusCode</code> of the response.","","","","","","","","View the user agent of the request.","View the <code>http::Version</code> of the request.","","","Create a <code>Filter</code> that requires the request method to be …","Create a <code>Filter</code> that requires the request method to be <code>GET</code>…","Create a <code>Filter</code> that requires the request method to be …","Extract the <code>Method</code> from the request.","Create a <code>Filter</code> that requires the request method to be …","Create a <code>Filter</code> that requires the request method to be …","Create a <code>Filter</code> that requires the request method to be …","Create a <code>Filter</code> that requires the request method to be <code>PUT</code>…","A <code>Stream</code> of multipart/form-data <code>Part</code>s.","A <code>Filter</code> to extract a <code>multipart/form-data</code> body from a …","A single “part” of a multipart/form-data body.","","","","","","","","","Get the content-type of this part, if present.","Asynchronously get some of the data for this <code>Part</code>.","Get the filename of this part, if present.","","","","Create a <code>Filter</code> to extract a <code>multipart/form-data</code> body …","","","","","","","Set the maximum byte length allowed for this body.","Get the name of this part.","","Convert this <code>Part</code> into a <code>Stream</code> of <code>Buf</code>s.","","","","","","","","","","","","","","","A <code>Filter</code> matching an exact path segment.","Represents the full request path, returned by the <code>full()</code> …","Represents that tail part of a request path, returned by …","Represents that tail part of a request path, returned by …","Get the <code>&str</code> representation of the remaining path.","Get the <code>&str</code> representation of the remaining path.","Get the <code>&str</code> representation of the request path.","","","","","","","","","","","Matches the end of a route.","","","","","","","","Returns the full request path, irrespective of other …","","","","","Extract a parameter from a path segment.","Create an exact match path segment <code>Filter</code>.","Peek at the unmatched tail of the path, without affecting …","Get an iterator over the segments of the peeked path.","Extract the unmatched tail of the path.","","","","","","","","","","","","","","","","","","Creates a <code>Filter</code> that decodes query parameters to the …","Creates a <code>Filter</code> that returns the raw query string as …","Wrap a <code>Filter</code> to set a header if it is not already set.","Wrap a <code>Filter</code> to always set a header.","Wrap a <code>Filter</code> to always set multiple headers.","","","","","","","","","","","","","Wrap a <code>Filter</code> that adds a header to the reply, if they …","","","","","","","Wrap a <code>Filter</code> that adds a header to the reply.","Wrap a <code>Filter</code> that adds multiple headers to the reply.","","","","","","","","","","","","","","","","","","","Server-sent event","Configure the interval between keep-alive messages, the …","","","","","Set Server-sent event comment Comment field (“:”)","Set Server-sent event data data field(s) (“data:”)","","Set Server-sent event event Event name field (“event:”…","","","","","","Set Server-sent event id Identifier field (“id:”)","Customize the interval between keep-alive messages.","","","Set Server-sent event data data field(s) (“data:”)","Keeps event source connection alive when no events sent …","Gets the optional last event id from request. Typically …","Server-sent events reply","Set Server-sent event retry Retry timeout field (“retry:…","Wrap an event stream with keep-alive functionality.","Customize the text of the keep-alive message.","","","","","","","","","","Information about the request/response that can be used …","Decorates a <code>Filter</code> to create a <code>tracing</code> span for requests …","","","","","","","","","","View the host of the request","","","View the <code>http::Method</code> of the request.","Create a wrapping filter that instruments every request …","View the URI path of the request.","View the referer of the request.","View the remote <code>SocketAddr</code> of the request.","Create a wrapping filter that instruments every request …","View the request headers.","","Create a wrapping filter that instruments every request …","","","","","","","View the user agent of the request.","View the <code>http::Version</code> of the request.","","","A WebSocket message.","Connection header did not include ‘upgrade’","A websocket <code>Stream</code> and <code>Sink</code>, provided to <code>ws</code> filters.","Extracted by the <code>ws</code> filter, and used to finish an upgrade.","Return the bytes of this message, if the message can …","Construct a new Binary <code>Message</code>.","","","","","","","","","","","Gracefully close this websocket.","Construct the default Close <code>Message</code>.","Try to get the close frame (close code and reason)","Construct a Close <code>Message</code> with a code and reason.","","","","","","","","","","","","","","","","","Destructure this message into binary data.","Returns true if this message is a Binary message.","Returns true if this message a is a Close message.","Returns true if this message is a Ping message.","Returns true if this message is a Pong message.","Returns true if this message is a Text message.","Set the maximum frame size (defaults to 16 megabytes)","Set the maximum message size (defaults to 64 megabytes)","Set the size of the internal message send queue.","","Finish the upgrade, passing a function to handle the …","Construct a new Ping <code>Message</code>.","","","","","Construct a new Pong <code>Message</code>.","","Construct a new Text <code>Message</code>.","","Try to get a reference to the string text, if this is a …","","","","","","","","","","","","","","","","","","","Creates a Websocket Filter.","A simple <code>308</code> permanent redirect to a different location.","A simple <code>301</code> permanent redirect to a different location.","A simple <code>303</code> redirect to a different location.","A simple <code>307</code> temporary redirect to a different location.","Invalid request header","Invalid query","A content-length header is required","HTTP method not allowed","Missing cookie","Missing request header","The request payload is too large","A marker trait to ensure proper types are used for custom …","Rejection of a request by a <code>Filter</code>.","The request’s content-type is not supported","","","","","","","","","","","","","","","","","","","Rejects a request with a custom cause.","Searches this <code>Rejection</code> for a specific cause.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if this Rejection was made via …","Retrieve the name of the header that was missing","Retrieve the name of the header that was invalid","Retrieve the name of the cookie that was missing","Rejects a request with <code>404 Not Found</code>.","Rejects a request with <code>404 Not Found</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An HTML reply.","A JSON formatted reply.","Types that can be converted into a <code>Response</code>.","Response type into which types implementing the <code>Reply</code> …","Wraps an <code>impl Reply</code> and adds a header when rendering.","Wrap an <code>impl Reply</code> to change its <code>StatusCode</code>.","","","","","","","","","","","","","","","Reply with a body and <code>content-type</code> set to …","","","","","Converts the given value into a <code>Response</code>.","","","","","Convert the value into a <code>Reply</code> with the value encoded as …","Returns an empty <code>Reply</code> with status code <code>200 OK</code>.","","","","","","","","","","","","","","","","","Wrap an <code>impl Reply</code> to add a header when rendering.","Wrap an <code>impl Reply</code> to change its <code>StatusCode</code>.","A request builder for testing filters.","A Websocket builder for testing filters.","A test client for Websocket filters.","An error from Websocket filter tests.","Set the bytes of this request body.","","","","","","","","","","Add a type to the request’s <code>http::Extensions</code>.","Tries to apply the <code>Filter</code> on this request.","","","","","","","","","","Execute this Websocket request against the provided …","Set a header for this request.","Set a header for this request.","","","","","Set the bytes of this request body by serializing a value …","Returns whether the <code>Filter</code> matches this request, or …","Sets the method of this builder.","Sets the request path of this builder.","Sets the request path of this builder.","Receive a websocket message from the server.","Assert the server has closed the connection.","Set the remote address of this request","Returns <code>Response</code> provided by applying the <code>Filter</code>.","Starts a new test <code>RequestBuilder</code>.","Send a websocket message to the server.","Send a “text” websocket message to the server.","","","","","","","","","","","","","","","","","","Starts a new test <code>WsBuilder</code>."],"i":[0,0,0,1,1,1,1,2,2,2,3,2,3,2,1,1,0,3,3,2,3,3,2,3,2,1,1,1,1,1,1,0,1,1,0,0,0,2,2,0,2,2,0,3,0,3,2,2,2,3,2,3,2,3,2,1,1,1,1,3,2,1,1,0,0,0,0,0,4,4,4,4,0,0,0,4,4,0,0,0,4,0,0,0,0,0,0,0,4,0,4,4,4,4,0,0,0,0,0,5,5,0,0,5,5,0,5,5,0,5,0,5,5,5,5,5,0,0,0,0,0,6,6,6,6,6,6,6,6,7,8,6,7,8,6,6,8,6,8,6,0,6,6,7,7,8,6,7,8,6,7,8,6,6,8,6,7,7,8,6,7,8,6,7,8,6,7,8,6,0,9,9,9,9,9,0,9,0,9,9,9,9,9,0,10,10,0,0,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,13,12,13,13,13,0,12,13,12,13,12,12,13,0,12,12,12,12,12,12,13,12,13,12,13,12,13,12,12,12,13,0,0,0,0,0,0,0,0,0,0,0,14,15,16,14,15,16,16,16,15,15,15,14,15,16,0,14,15,16,14,15,16,16,15,14,15,16,14,15,16,14,15,16,14,14,15,16,14,15,16,0,0,0,0,17,18,19,17,18,19,20,17,18,19,20,20,20,0,17,18,19,17,18,19,20,0,17,18,19,20,0,0,0,18,0,20,17,18,19,20,17,18,19,20,17,18,19,20,17,18,19,20,0,0,0,0,0,21,22,23,21,22,23,21,22,23,21,22,23,0,21,22,23,21,22,23,0,0,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,0,0,24,25,24,25,24,24,24,24,24,24,25,24,25,24,25,24,25,24,0,0,0,24,25,25,24,24,25,24,25,24,25,24,25,0,0,26,27,26,27,27,27,27,26,27,26,26,27,26,0,26,26,26,0,26,27,0,26,27,26,27,26,27,26,26,26,27,0,0,0,0,28,28,29,30,28,31,29,30,28,31,28,28,30,28,28,28,28,28,29,30,28,31,31,29,30,28,31,29,30,28,28,31,28,28,28,28,28,28,29,29,29,28,29,28,30,30,30,30,28,30,28,28,28,31,29,30,28,31,29,30,28,31,30,29,30,28,31,29,30,28,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,0,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,32,32,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,38,39,40,0,0,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,0,0,0,0,0,0,41,42,43,44,41,42,43,44,43,44,41,42,43,44,0,41,42,43,44,45,41,42,43,44,0,0,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,0,0,0,0,0,0,46,47,46,48,49,47,46,48,49,49,46,46,47,46,48,49,49,47,46,48,49,48,46,48,47,46,48,49,46,46,46,46,48,47,47,46,46,0,47,47,49,47,46,48,49,47,46,48,49,47,46,48,49,47,46,48,49,0],"f":[null,null,null,[[],["and",3]],[[],["and",3]],[[],["andthen",3]],[[],["andthen",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["boxedfilter",3]],[[],["boxedfilter",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["infallible",4]],["error",3]],[[]],[[]],[[]],[[]],[[],["map",3]],[[],["map",3]],[[],["or",3]],[[],["or",3]],[[],["orelse",3]],[[],["orelse",3]],null,[[],["recover",3]],[[],["recover",3]],null,null,null,[[]],[[]],[[],["server",3]],[[]],[[]],[[],["filteredservice",3]],[[],[["stderror",8],["option",4]]],null,[[],["string",3]],[[]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["unify",3]],[[],["unify",3]],[[],["untupleone",3]],[[],["untupleone",3]],[[]],[[]],[[]],[[]],[[],["wrapfn",3]],null,null,null,null,[[]],[[]],[[],["boxedfilter",3]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[]],null,null,null,[[]],null,null,null,null,null,null,null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],null,[[]],[[]],[[]],[[]],[[["u64",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],[["stderror",8],["option",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["str",15]]],[[["str",15]]],null,null,null,[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cors",3]],[[],["cors",3]],[[],["builder",3]],[[]],[[]],[[],["builder",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["response",6]],[[],["path",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[]],[[["str",15]]],[[["str",15]]],null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[],["authority",3]],[[]],[[["str",15]],["bool",15]],[[["authority",3]],["bool",15]],[[["string",3]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[["str",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],[["result",4],["authority",3],["invaliduri",3]]],[[["str",15]],["authority",3]],[[["str",15]],[["result",4],["authority",3],["invaliduri",3]]],[[]],[[],["str",15]],[[]],[[]],[[["authority",3]],[["ordering",4],["option",4]]],[[["string",3]],[["ordering",4],["option",4]]],[[["str",15]],[["ordering",4],["option",4]]],[[["str",15]],[["ordering",4],["option",4]]],[[],[["port",3],["option",4]]],[[],[["option",4],["u16",15]]],[[]],[[],["string",3]],[[],[["authority",3],["result",4]]],[[["str",15]],[["authority",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["log",3]],[[]],[[],["log",3]],[[],["duration",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["option",4],["str",15]]],[[]],[[]],[[["str",15]],["log",3]],[[],["method",3]],[[],["str",15]],[[],[["option",4],["str",15]]],[[],[["option",4],["socketaddr",4]]],[[],["headermap",3]],[[],["statuscode",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["option",4],["str",15]]],[[],["version",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["formoptions",3]],[[]],[[],[["option",4],["str",15]]],[[]],[[],[["option",4],["str",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["formoptions",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[],["str",15]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4],["poll",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["exact",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["exact",3],["opaque",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["withheader",3]],[[],["withheaders",3]],[[],["withdefaultheader",3]],[[]],[[]],[[]],[[],["withdefaultheader",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["withheader",3]],[[["headermap",3]],["withheaders",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["into",8],["string",3]],["event",3]],[[["into",8],["string",3]],["event",3]],[[],["event",3]],[[["into",8],["string",3]],["event",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["into",8],["string",3]],["event",3]],[[["duration",3]]],[[]],[[]],[[["serialize",8]],[["event",3],["result",4],["error",3]]],[[],["keepalive",3]],[[]],[[]],[[["duration",3]],["event",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["trace",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["option",4],["str",15]]],[[]],[[]],[[],["method",3]],[[["str",15]],["trace",3]],[[],["str",15]],[[],[["option",4],["str",15]]],[[],[["option",4],["socketaddr",4]]],[[],["trace",3]],[[],["headermap",3]],[[]],[[],["trace",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["option",4],["str",15]]],[[],["version",3]],[[]],[[]],null,null,null,null,[[]],[[["into",8],["vec",3]],["message",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["message",3]],[[]],[[]],[[],["message",3]],[[],["option",4]],[[],["message",3]],[[["message",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["u8",15],["vec",3]]],[[]],[[],[["u8",15],["vec",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["message",3]],["bool",15]],[[]],[[["into",8],["vec",3]],["message",3]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["into",8],["vec",3]],["message",3]],[[["pin",3],["message",3]],["result",4]],[[["into",8],["string",3]],["message",3]],[[]],[[],[["result",4],["str",15]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4],["poll",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["reject",8]],["rejection",3]],[[],["option",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["infallible",4]],["rejection",3]],[[],["rejection",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["rejection",3]],[[],["rejection",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["html",3]],[[]],[[]],[[]],[[]],[[],["response",6]],[[],["response",6]],[[],["response",6]],[[],["response",6]],[[],["response",6]],[[],["json",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["reply",8]],[["withheader",3],["reply",8]]],[[["reply",8],["statuscode",3]],[["withstatus",3],["reply",8]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[]],[[]],[[["socketaddr",4]]],[[]],[[],["requestbuilder",3]],[[["message",3]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["wsbuilder",3]]],"p":[[8,"Filter"],[3,"Server"],[3,"Error"],[3,"BoxedFilter"],[3,"BodyDeserializeError"],[3,"Builder"],[3,"CorsForbidden"],[3,"Cors"],[3,"MissingExtension"],[3,"File"],[3,"Authority"],[3,"Info"],[3,"Log"],[3,"FormData"],[3,"Part"],[3,"FormOptions"],[3,"Tail"],[3,"Peek"],[3,"FullPath"],[3,"Exact"],[3,"WithHeader"],[3,"WithHeaders"],[3,"WithDefaultHeader"],[3,"Event"],[3,"KeepAlive"],[3,"Info"],[3,"Trace"],[3,"Message"],[3,"Ws"],[3,"WebSocket"],[3,"MissingConnectionUpgrade"],[3,"Rejection"],[3,"InvalidQuery"],[3,"MethodNotAllowed"],[3,"LengthRequired"],[3,"PayloadTooLarge"],[3,"UnsupportedMediaType"],[3,"MissingHeader"],[3,"InvalidHeader"],[3,"MissingCookie"],[3,"Json"],[3,"Html"],[3,"WithStatus"],[3,"WithHeader"],[8,"Reply"],[3,"RequestBuilder"],[3,"WsClient"],[3,"WsBuilder"],[3,"WsError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};